"use strict";angular.module("google.places",[]).factory("googlePlacesApi",["$window",function(a){if(!a.google)throw"Global `google` var missing. Did you forget to include the places API script?";return a.google}]).directive("gPlacesAutocomplete",["$parse","$compile","$timeout","$document","googlePlacesApi",function(a,b,c,d,e){return{restrict:"A",require:"^ngModel",scope:{model:"=ngModel",options:"=?",forceSelection:"=?",customPlaces:"=?"},controller:["$scope",function(a){}],link:function(a,f,g,h){function m(){f.bind("keydown",p),f.bind("blur",q),f.bind("submit",q),a.$watch("selected",r)}function n(){var f,c=angular.element("<div g-places-autocomplete-drawer></div>"),e=angular.element(d[0].body);c.attr({input:"input",query:"query",predictions:"predictions",active:"active",selected:"selected"}),f=b(c)(a),e.append(f),a.$on("$destroy",function(){f.remove()})}function o(){h.$parsers.push(s),h.$formatters.push(t),h.$render=u}function p(b){0!==a.predictions.length&&A(j,b.which)!==-1&&(b.preventDefault(),b.which===i.down?(a.active=(a.active+1)%a.predictions.length,a.$digest()):b.which===i.up?(a.active=(a.active?a.active:a.predictions.length)-1,a.$digest()):13===b.which||9===b.which?(a.forceSelection&&(a.active=a.active===-1?0:a.active),a.$apply(function(){a.selected=a.active,a.selected===-1&&v()})):27===b.which&&a.$apply(function(){b.stopPropagation(),v()}))}function q(b){0!==a.predictions.length&&(a.forceSelection&&(a.selected=a.selected===-1?0:a.selected),a.$digest(),a.$apply(function(){a.selected===-1&&v()}))}function r(){var b;b=a.predictions[a.selected],b&&(b.is_custom?a.$apply(function(){a.model=b.place,a.$emit("g-places-autocomplete:select",b.place),c(function(){h.$viewChangeListeners.forEach(function(a){a()})})}):l.getDetails({placeId:b.place_id},function(b,d){d==e.maps.places.PlacesServiceStatus.OK&&a.$apply(function(){a.model=b,a.$emit("g-places-autocomplete:select",b),c(function(){h.$viewChangeListeners.forEach(function(a){a()})})})}),v())}function s(b){var c;return b&&y(b)?(a.query=b,c=angular.extend({input:b},a.options),k.getPlacePredictions(c,function(b,c){a.$apply(function(){var d;v(),a.customPlaces&&(d=w(a.query),a.predictions.push.apply(a.predictions,d)),c==e.maps.places.PlacesServiceStatus.OK&&a.predictions.push.apply(a.predictions,b),a.predictions.length>5&&(a.predictions.length=5)})}),a.forceSelection?h.$modelValue:b):b}function t(a){var b="";return y(a)?b=a:z(a)&&(b=a.name+", "+a.formatted_address),b}function u(){return f.val(h.$viewValue)}function v(){a.active=-1,a.selected=-1,a.predictions=[]}function w(b){var d,e,f,c=[];for(f=0;f<a.customPlaces.length;f++)d=a.customPlaces[f],e=x(b,d),e.matched_substrings.length>0&&c.push({is_custom:!0,custom_prediction_label:d.custom_prediction_label||"(Custom Non-Google Result)",description:d.formatted_address,place:d,matched_substrings:e.matched_substrings,terms:e.terms});return c}function x(a,b){var f,g,h,c=a+"",d=[],e=[];for(g=b.formatted_address.split(","),h=0;h<g.length;h++)f=g[h].trim(),c.length>0&&(f.length>=c.length?(B(f,c)&&e.push({length:c.length,offset:h}),c=""):B(c,f)?(e.push({length:f.length,offset:h}),c=c.replace(f,"").trim()):c=""),d.push({value:f,offset:b.formatted_address.indexOf(f)});return{matched_substrings:e,terms:d}}function y(a){return"[object String]"==Object.prototype.toString.call(a)}function z(a){return"[object Object]"==Object.prototype.toString.call(a)}function A(a,b){var c,d;if(null===a)return-1;for(d=a.length,c=0;c<d;c++)if(a[c]===b)return c;return-1}function B(a,b){return 0===C(a).lastIndexOf(C(b),0)}function C(a){return null===a?"":a.toLowerCase()}var i={tab:9,enter:13,esc:27,up:38,down:40},j=[i.tab,i.enter,i.esc,i.up,i.down],k=new e.maps.places.AutocompleteService,l=new e.maps.places.PlacesService(f[0]);!function(){a.query="",a.predictions=[],a.input=f,a.options=a.options||{},n(),m(),o()}()}}}]).directive("gPlacesAutocompleteDrawer",["$window","$document",function(a,b){var c=['<div class="pac-container" ng-if="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\', width: position.width+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">','  <div class="pac-item" g-places-autocomplete-prediction index="$index" prediction="prediction" query="query"','       ng-repeat="prediction in predictions track by $index" ng-class="{\'pac-item-selected\': isActive($index) }"','       ng-mouseenter="selectActive($index)" ng-click="selectPrediction($index)" role="option" id="{{prediction.id}}">',"  </div>","</div>"];return{restrict:"A",scope:{input:"=",query:"=",predictions:"=",active:"=",selected:"="},template:c.join(""),link:function(c,d){function e(c){var d=c[0],e=d.getBoundingClientRect(),f=b[0].documentElement,g=b[0].body,h=a.pageYOffset||f.scrollTop||g.scrollTop,i=a.pageXOffset||f.scrollLeft||g.scrollLeft;return{width:e.width,height:e.height,top:e.top+e.height+h,left:e.left+i}}d.bind("mousedown",function(a){a.preventDefault()}),a.onresize=function(){c.$apply(function(){c.position=e(c.input)})},c.isOpen=function(){return c.predictions.length>0},c.isActive=function(a){return c.active===a},c.selectActive=function(a){c.active=a},c.selectPrediction=function(a){c.selected=a},c.$watch("predictions",function(){c.position=e(c.input)},!0)}}}]).directive("gPlacesAutocompletePrediction",[function(){var a=['<span class="pac-icon pac-icon-marker"></span>','<span class="pac-item-query" ng-bind-html="prediction | highlightMatched"></span>','<span ng-repeat="term in prediction.terms | unmatchedTermsOnly:prediction">{{term.value | trailingComma:!$last}}&nbsp;</span>','<span class="custom-prediction-label" ng-if="prediction.is_custom">&nbsp;{{prediction.custom_prediction_label}}</span>'];return{restrict:"A",scope:{index:"=",prediction:"=",query:"="},template:a.join("")}}]).filter("highlightMatched",["$sce",function(a){return function(b){var e,c="",d="";return b.matched_substrings.length>0&&b.terms.length>0&&(e=b.matched_substrings[0],c=b.terms[0].value.substr(e.offset,e.length),d=b.terms[0].value.substr(e.offset+e.length)),a.trustAsHtml('<span class="pac-matched">'+c+"</span>"+d)}}]).filter("unmatchedTermsOnly",[function(){return function(a,b){var c,d,e=[];for(c=0;c<a.length;c++)d=a[c],b.matched_substrings.length>0&&d.offset>b.matched_substrings[0].length&&e.push(d);return e}}]).filter("trailingComma",[function(){return function(a,b){return b?a+",":a}}]);